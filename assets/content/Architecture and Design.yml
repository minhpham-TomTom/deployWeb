---
Threat assessment:
  Do you conduct simple threat modelling on technical level?:
    risk: Technical related threats are discovered too late in the development and deployment process.
    measure: Threat modelling of technical features is performed during the product sprint planning.
    difficultyOfImplementation:
      knowledge: 2
      time: 3
      resources: 1
    usefulness: 3
    level: 1
    implementation:
      - Threat modelling Playbook https://github.com/Toreon/threat-model-playbook
    md-description: |

        Once requirements are gathered and analysis is performed, implementation specifics need to be defined. The outcome of this stage is usually a diagram outlining data flows and a general system architecture. This presents an opportunity for both threat modeling and attaching security considerations to every ticket and epic that is the outcome of this stage.

          There is some great advice on threat modeling out there *e.g.* (https://arstechnica.com/information-technology/2017/07/how-i-learned-to-stop-worrying-mostly-and-love-my-threat-model/) article or [this](https://www.microsoft.com/en-us/securityengineering/sdl/threatmodeling) one.

          A bite sized primer by Adam Shostack himself can be found at https://adam.shostack.org/blog/2018/03/threat-modeling-panel-at-appsec-cali-2018/).

          OWASP includes a short article (https://wiki.owasp.org/index.php/Category:Threat_Modeling) on Threat Modeling along with a relevant [Cheatsheet](https://cheatsheetseries.owasp.org/cheatsheets/Threat_Modeling_Cheat_Sheet.html). Moreover, if you're following OWASP SAMM, it has a short section on [Threat Assessment](https://owaspsamm.org/model/design/threat-assessment/).

          There's a few projects that can help with creating Threat Models at this stage, [PyTM](https://github.com/izar/pytm) is one, [ThreatSpec](https://github.com/threatspec/threatspec) is another.

          > Note: _A threat model can be as simple as a data flow diagram with attack vectors on every flow and asset and equivalent remediations. An example can be found below._

          ![Threat Model](https://github.com/OWASP/www-project-integration-standards/raw/master/writeups/owasp_in_sdlc/images/threat_model.png "Threat Model")

          Last, if the organisation maps Features to Epics, the Security Knowledge Framework (SKF) can be used to facilitate this process by leveraging it's questionnaire function.

          ![SKF](https://github.com/OWASP/www-project-integration-standards/raw/master/writeups/owasp_in_sdlc/images/skf_qs.png "SKF")

          This practice has the side effect that it trains non-security specialists to think like attackers.

          The outcomes of this stage should help lay the foundation of secure design and considerations.

          **Example Low Maturity Scenario:**

          Following vague feature requirements the design includes caching data to a local unencrypted database with a hardcoded password.

          Remote data store access secrets are hardcoded in the configuration files. All communication between backend systems is plaintext.

          Frontend serves data over GraphQL as a thin layer between caching system and end user.

          GraphQL queries are dynamically translated to SQL, Elasticsearch and NoSQL queries. Access to data is protected with basic auth set to _1234:1234_ for development purposes.

          Source: OWASP Project Integration Project
    samm: TA1-A
    samm2: i-threat-assessment|B|1
    bsimm: intelligence|AM1
    iso270012017:
      - 8.2.1
      - 14.2.1
  Do you conduct simple threat modelling on business level?:
    risk: Business related threats are discovered too late in the development and deployment process.
    measure: Threat modelling of business functionality is performed during the product backlog creation to facilitate early detection of security defects.
    difficultyOfImplementation:
      knowledge: 2
      time: 3
      resources: 1
    usefulness: 3
    level: 2
    samm: TA1-A
    samm2: 
      - i-threat-assessment|A|1
      - i-threat-assessment|A|2
    bsimm: intelligence|AM2
    iso270012017:
      - 8.2.1
      - 14.2.1
  Do you create simple abuse stories:
    risk: User stories mostly don't consider security implications. Security flaws are discovered too late in the development and deployment process.
    measure: Abuse stories are created during the creation of user stories.
    difficultyOfImplementation:
      knowledge: 2
      time: 2
      resources: 1
    usefulness: 4
    level: 2
    samm: TA2-A
    samm2: i-threat-assessment|B|2
    bsimm: intelligence|AM2
    iso270012017:
      - 6.1.5
      - 8.1.2
    implementation: 
      - Don't Forget EVIL User Stories https://www.owasp.org/index.php/Agile_Software_Development:_Don%27t_Forget_EVIL_User_Stories
      - Practical Security Stories and Security Tasks for Agile Development Environments http://safecode.org/publication/SAFECode_Agile_Dev_Security0712.pdf
  Do you conduct advanced threat modelling?:
    risk: Inadequate identification of business and technical risks.
    measure: Threat modelling is performed by using reviewing user stories and producing security driven data flow diagrams.
    difficultyOfImplementation:
      knowledge: 4
      time: 3
      resources: 2
    usefulness: 3
    level: 3
    md-description: |
      **Example High Maturity Scenario:**

      Based on a detailed threat model defined and updated through code, the team decides the following:

      * Local encrypted caches need to expire and auto-purged.
      * Communication channels encrypted and authenticated.
      * All secrets persisted in shared secrets store.
      * Frontend designed with permissions model integration.
      * Permissions matrix defined.
      * Input is escaped output is encoded appropriately using well established libraries.

      Source: OWASP Project Integration Project
    samm: TA2-B
    samm2: i-threat-assessment|A|3
    bsimm: intelligence|AM3
    iso270012017:
      - 8.2.1
      - 14.2.1
  Do you create advanced abuse stories?:
    risk: Simple user stories are not going deep enough. Relevant security considerations are performed. Security flaws are discovered too late in the development and deployment process
    measure: Advanced abuse stories are created as part of threat modelling activities.
    difficultyOfImplementation:
      knowledge: 4
      time: 2
      resources: 1
    usefulness: 4
    level: 3
    dependsOn:
      - "Do you create simple abuse stories"
    samm: TA2-A
    samm2: i-threat-assessment|B|3
    bsimm: intelligence|AM3
    iso270012017:
      - 6.1.5
      - 8.1.2
    implementation: 
      - Don't Forget EVIL User Stories https://www.owasp.org/index.php/Agile_Software_Development:_Don%27t_Forget_EVIL_User_Stories
      - Practical Security Stories and Security Tasks for Agile Development Environments http://safecode.org/publication/SAFECode_Agile_Dev_Security0712.pdf
Security Requirements:
  Do you identify security requirements during development?:
    risk: 
    measure: 
    difficultyOfImplementation:
      knowledge: 
      time: 
      resources: 
    usefulness:
    level: 1
    implementation:
    samm2: d-security-requirements|A|1
    bsimm: intelligence|SR1 
    iso270012017:
  Do you include security requirements originated from other sources of such requirements?:
    risk: 
    measure: "Security requirements can originate from other sources including policies and legislation, known problems within the application, and intelligence from metrics and feedback"
    difficultyOfImplementation:
      knowledge: 
      time: 
      resources: 
    usefulness:
    level: 2
    implementation:
    samm2: d-security-requirements|A|2
    bsimm: intelligence|SR2 
    iso270012017:
  Do you use a standard requirements framework?:
    risk: 
    measure: 
    difficultyOfImplementation:
      knowledge: 
      time: 
      resources: 
    usefulness:
    level: 3
    implementation:
    samm2: d-security-requirements|B|3
    bsimm: intelligence|SR3 
    iso270012017:
Security Architecture:
  Do you integrate security features and provide security guidance during the software design process?:
    risk: 
    measure: 
    difficultyOfImplementation:
      knowledge: 
      time: 
      resources: 
    usefulness:
    level: 1
    implementation:
    samm2: d-security-architecture|A|1
    bsimm: intelligence|SFD1
    iso270012017:
  Do you adopt secure by default design patterns and security solutions?:
    risk: 
    measure: 
    difficultyOfImplementation:
      knowledge: 
      time: 
      resources: 
    usefulness:
    level: 2
    implementation: 
    samm2: d-security-architecture|A|2
    bsimm: intelligence|SFD2
    iso270012017:
  Do you formally control and validate the software design process?:
    risk: 
    measure: 
    difficultyOfImplementation:
      knowledge: 
      time: 
      resources: 
    usefulness:
    level: 3
    implementation:
    samm2: d-security-architecture|A|3
    bsimm: intelligence|SFD3
    iso270012017:
Architecture Analysis:
  Do you have a basic security feature review process?:
    risk: 
    measure: 
    difficultyOfImplementation:
      knowledge: 
      time: 
      resources: 
    usefulness:
    level: 1
    implementation:
    samm2: 
    bsimm: ssdl-touchpoints|AA1
    iso270012017:
  Do you define and use an architecture analysis process?:
    risk: 
    measure: 
    difficultyOfImplementation:
      knowledge: 
      time: 
      resources: 
    usefulness:
    level: 2
    implementation:
    samm2: 
    bsimm: ssdl-touchpoints|AA2
    iso270012017: 
  Do you have an engineering team to lead the architecture analysis process and to define standard architecture patterns?:
    risk: 
    measure: 
    difficultyOfImplementation:
      knowledge: 
      time: 
      resources: 
    usefulness:
    level: 3
    implementation:
    samm2: 
    bsimm: ssdl-touchpoints|AA3
    iso270012017:
...
